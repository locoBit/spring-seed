buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.liquibase:liquibase-gradle-plugin:2.0.0")
	}
}

plugins {
	id 'org.liquibase.gradle' version '2.0.0'
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'liquibase'

group = 'com.postgres'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://plugins.gradle.org/m2/" }
}

liquibase {
	mainClassName 'org.liquibase.gradle.OutputEnablingLiquibaseRunner'
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			url 'jdbc:postgresql://localhost:5431/postgres'
			username 'postgres'
			password 'postgres'
		}
	}

	runList = 'main'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	runtime('org.postgresql:postgresql')
	compile('org.liquibase:liquibase-core')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	liquibaseRuntime('org.postgresql:postgresql')
	liquibaseRuntime('org.liquibase:liquibase-core:3.6.1')
	liquibaseRuntime('org.liquibase:liquibase-gradle-plugin:2.0.0')
}